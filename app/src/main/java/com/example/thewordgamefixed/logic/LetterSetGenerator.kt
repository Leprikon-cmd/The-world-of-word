package com.example.thewordgamefixed.logic

object LetterSetGenerator {
    private const val LETTER_COUNT = 5 // —Ä–∞–∑–º–µ—Ä –Ω–∞–±–æ—Ä–∞ –±—É–∫–≤ (–±—É–∫–≤—ã –∑–≤–µ–∑–¥—ã)
    private const val MIN_VALID_WORDS = 5 // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –∏–∑ –Ω–∞–±–æ—Ä–∞

    fun generateSet(): LetterSet? {
        val words = DictionaryManager.getWords()

        // üîé 1. –í—ã–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞ –¥–ª–∏–Ω–æ–π —Ä–æ–≤–Ω–æ 5 –±—É–∫–≤ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤
        val candidateWords = words.filter {
            it.length == LETTER_COUNT && it.toSet().size == LETTER_COUNT
        }.shuffled() // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º, —á—Ç–æ–±—ã –±—ã–ª–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å

        for (baseWord in candidateWords) {
            val letters = baseWord.toSet().toList() // 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±—É–∫–≤

            // üîé 2. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —ç—Ç–∏—Ö –±—É–∫–≤
            val matchingWords = words.filter { w ->
                w.length in 3..5 &&                  // –¥–ª–∏–Ω–∞ –æ—Ç 3 –¥–æ 5 —Å–∏–º–≤–æ–ª–æ–≤
                        w.all { it in letters } &&           // —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏–∑ –±–∞–∑–æ–≤–æ–≥–æ –Ω–∞–±–æ—Ä–∞
                        w.toSet().size == w.length           // –±–µ–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤
            }

            // üéØ 3. –•–æ—Ç–∏–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è ‚Äî –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ
            val groupedByFirst = matchingWords.groupBy { it.first() }

            // ‚úÇÔ∏è 4. –û–±—Ä–µ–∑–∞–µ–º: –º–∞–∫—Å–∏–º—É–º 2 —Å–ª–æ–≤–∞ –Ω–∞ –∫–∞–∂–¥—É—é –ø–µ—Ä–≤—É—é –±—É–∫–≤—É
            val limited = groupedByFirst.values
                .flatMap { it.take(2) }
                .take(MIN_VALID_WORDS)

            // ‚úÖ 5. –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–≤ –∏ —Ö–æ—Ç—è –±—ã 3 —Ä–∞–∑–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –±—É–∫–≤—ã
            val distinctFirstLetters = limited.map { it.first() }.toSet()

            if (limited.size >= MIN_VALID_WORDS && distinctFirstLetters.size >= 3) {
                return LetterSet(letters, limited.toSet()) // üéâ –ì–æ—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä
            }
        }

        // ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å ‚Äî –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        return null
    }

    data class LetterSet(
        val letters: List<Char>, // 5 –±—É–∫–≤ ‚Äî –±—É–¥—É—Ç —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ –∑–≤–µ–∑–¥–µ
        val words: Set<String>   // –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —ç—Ç–∏—Ö –±—É–∫–≤
    )
}